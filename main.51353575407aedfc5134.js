(()=>{var e={289:(e,t,s)=>{"use strict";s.r(t)},411:e=>{e.exports=class{constructor(e,t){this.map=e,this.layouts=t,this.generateSelectors(),this.setActionForSelectors(),this.render()}generateSelectors(){Object.entries(this.layouts).forEach((([e,t])=>{Object.defineProperty(t,"map",{value:this.map});const{title:s,style:o}=t;this.map.createSelector(e,s,o)}))}setActionForSelectors(){this.map.onSelect((()=>{Object.entries(this.layouts).forEach((([e,t])=>{this.map.selector!==e&&t.unmount()})),this.layouts[this.map.selector].render()}))}render(){const[e]=Object.values(this.layouts);e.render()}}},984:e=>{e.exports=class{constructor(e,t){this.map=new google.maps.Map(e,t),this.Marker=google.maps.Marker,this.Position=google.maps.LatLng,this.Polyline=google.maps.Polyline,this.Point=google.maps.Point,this.MapType=google.maps.StyledMapType}createSelector(e,t,s){this.map.mapTypes.set(e,new this.MapType(s,{name:t}))}get selector(){return this.map.getMapTypeId()}onSelect(e){this.map.addListener("maptypeid_changed",e)}renderMarker(e,t){return new this.Marker({map:this.map,position:new this.Position(e,t),icon:{url:"assets/mapmarker.png",anchor:new this.Point(6,23)}})}renderPolyline(e,t){return new this.Polyline({map:this.map,path:e,geodesic:!0,strokeColor:t,strokeOpacity:.9,strokeWeight:2})}renderGeoJSON(e,t){const s=this.map.data.addGeoJson(e);return this.map.data.setStyle(t),s}removeGeoJSON(e){e.map((e=>this.map.data.remove(e)))}}},557:e=>{e.exports=class{constructor(e,t){this.map=null,this.style=e,this.title=t}}},974:(e,t,s)=>{const o=s(557);e.exports=class extends o{constructor(e,t,s){super(e,t),this.markers=[],this.points=Object.values(s)}render(){this.points.forEach((e=>{e.forEach((e=>this.markers.push(this.map.renderMarker(e.lat,e.lon))))}))}unmount(){this.markers.forEach((e=>e.setMap(null)))}}},898:(e,t,s)=>{const o=s(557);e.exports=class extends o{constructor(e,t,s){super(e,t),this.markers=[],this.polylines=[],this.citiesPoints=s.points,this.flightPaths=s.paths}render(){this.citiesPoints.forEach((e=>{this.markers.push(this.map.renderMarker(e.lat,e.lon))})),this.flightPaths.forEach((e=>this.polylines.push(this.map.renderPolyline([{lat:parseFloat(e[0]),lng:parseFloat(e[1])},{lat:parseFloat(e[2]),lng:parseFloat(e[3])}],e[4]))))}unmount(){["markers","polylines"].forEach((e=>this[e].forEach((e=>e.setMap(null)))))}}},856:e=>{e.exports={commonInfo:{siteTitle:"",title:"",subTitle:"",googleMapApiKey:"",flightradarUsername:""},databasePath:"//../../db.sqlite3",selectorsTitles:{citiesSelectorTitle:"📍Cities",flightsSelectorTitle:"✈️ Flights"},googleMapConfig:e=>{const t=Object.keys(e),[s]=t;return{center:{lat:25,lng:62},zoom:2,scrollwheel:!1,streetViewControl:!1,fullscreenControl:!0,mapTypeId:s,mapTypeControlOptions:{mapTypeIds:t,style:google.maps.MapTypeControlStyle.DEFAULT}}}}}},t={};function s(o){if(t[o])return t[o].exports;var r=t[o]={exports:{}};return e[o](r,r.exports,s),r.exports}s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{const e=s(411),t=s(984),o=s(974),r=s(898),{googleMapConfig:a,selectorsTitles:i}=s(856);s(289),document.addEventListener("DOMContentLoaded",(()=>{const s=document.querySelector("div.filters-box");s.addEventListener("click",(function({target:e}){e.classList.contains("filters-box__item")&&Array.from(s.children).forEach((t=>{const s=t.getAttribute("data-content");document.getElementsByClassName(s)[0].style.display=e===t?"block":"none",t.classList.toggle("_active")}))}));const{cities:n,flights:l}=window.shareData,{citiesSelectorTitle:c,flightsSelectorTitle:p}=i,h={CitiesLayout:new o([],c,n),FlightsLayout:new r([],p,l)};return new e(new t(document.getElementById("travel-map"),a(h)),h)}))})()})();